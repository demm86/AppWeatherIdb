(()=>{"use strict";const e=document.querySelector(".info-txt"),t={pendingMsj(t){e.innerText=t,e.classList.add("pending")},errorMsj(t){e.innerText=t,e.classList.replace("pending","error")},removeMsj(){e.classList.remove("pending","error"),e.innerText=""},errorAlert(e){alert(e)}},r={getGeoLoc(){navigator.geolocation?navigator.geolocation.getCurrentPosition(this.onSuccess,this.onError):t.errorAlert("Your browser not support geolocation api")},onSuccess(e){const{latitude:t,longitude:r}=e.coords;u.requestWeatherLatLonApi(t,r),u.requestForeCastLatLonApi(t,r)},onError(e){t.errorMsj(e.message)}},n=document.getElementsByClassName("metric"),i=document.getElementsByClassName("imperial"),a={locationSettings:"",setLocationStorage(e){localStorage.setItem("settingUnitWeather",e),this.locationSettings=e,this.changeMetricSettings()},getLocationStorage(){return this.locationSettings=localStorage.getItem("settingUnitWeather")?"Metric":localStorage.getItem("settingUnitWeather"),this.locationSettings},changeMetricSettings(){let e=this.locationSettings?this.locationSettings:"Metric";for(var t=0;t<n.length;t++)n[t].style.display="Metric"==e?"block":"none",n[t].style.visibility="Metric"==e?"":"hidden";for(t=0;t<i.length;t++)i[t].style.display="Imperial"==e?"block":"none",i[t].style.visibility="Imperial"==e?"":"hidden"},getGeoLocation(){r.getGeoLoc()}},o=document.querySelector(".wrapper"),s=o.querySelector(".weather-part"),c=s.querySelector("img"),l=document.getElementById("input-city"),h=o.querySelector("#ForecastDiv"),m={weatherDetails(e){if("404"==e.cod)t.errorMsj("Invalid city name");else{const r=e.location.name,n=e.location.country,i=e.current.condition.text,a=e.current.tempC,h=e.current.tempF,m=e.current.feelslikeC,u=e.current.feelslikeF,p=e.current.humidity,d=e.current.windKph,g=e.current.windMph;c.src="http:"+e.current.condition.icon,s.querySelector(".temp .numb.metric").innerText=Math.floor(a),s.querySelector(".temp .numb.imperial").innerText=Math.floor(h),s.querySelector(".weather").innerText=i,s.querySelector(".location span").innerText=`${r}, ${n}`,s.querySelector(".temp .numb-2.metric").innerText=Math.floor(m),s.querySelector(".temp .numb-2.imperial").innerText=Math.floor(u),s.querySelector(".humidity span").innerText=`${p}%`,s.querySelector(".wind span.numb.metric").innerText=`${d} Kph `,s.querySelector(".wind span.numb.imperial").innerText=`${g} Mph `,l.value=`${r}, ${n}`,t.removeMsj(),o.classList.add("active")}},weatherForecastDetails(e){h.innerHTML="","404"==e.cod?t.errorMsj("Invalid city name"):e.forecast.forecastday.map(((e,t)=>{let r=`<div>\n             <img src="http:${e.day.condition.icon}" alt="Weather Icon">\n            <span class="day"> ${moment(e.date).format("dddd")}</span>                                                   \n            <hr>\n            <span class="numb metric"> ${e.day.maxtempC}째 </span>\n            <span class="numb imperial"> ${e.day.maxtempF}째 </span>\n            <span class="numb metric"> ${e.day.mintempC} 째 </span>                   \n            <span class="numb imperial"> ${e.day.mintempF} 째 </span>                   \n            </div>`;h.innerHTML+=r})),a.changeMetricSettings(),t.removeMsj()}},u={baseUrl:"http://apiweather-env-1.us-east-2.elasticbeanstalk.com/api/v1.0",apiUrl:"",requestWeatherApi(e){this.apiUrl=`${this.baseUrl}/Current?location=${e}`,this.fetchDataWeather()},requestWeatherLatLonApi(e,t){this.apiUrl=`${this.baseUrl}/Current?location=${e},${t}`,this.fetchDataWeather()},requestForeCastApi(e){this.apiUrl=`${this.baseUrl}/CurrentForecast?location=${e}`,this.fetchDataForecast()},requestForeCastLatLonApi(e,t){this.apiUrl=`${this.baseUrl}/CurrentForecast?location=${e},${t}`,this.fetchDataForecast()},fetchDataWeather(){t.pendingMsj("Getting weather details..."),fetch(this.apiUrl).then((e=>e.json())).then((e=>m.weatherDetails(e))).catch((()=>{t.errorMsj("Something went wrong")}))},fetchDataForecast(){t.pendingMsj("Getting weather details..."),fetch(this.apiUrl).then((e=>e.json())).then((e=>m.weatherForecastDetails(e))).catch((()=>{t.errorMsj("Something went wrong")}))}},p=document.getElementById("input-city"),d=document.getElementById("metricts-select"),g=document.getElementById("button-get-data");d.value=a.getLocationStorage(),p.addEventListener("keyup",(e=>{"Enter"==e.key&&""!=p.value&&(u.requestWeatherApi(p.value),u.requestForeCastApi(p.value))})),d.addEventListener("change",(function(){a.setLocationStorage(d.value)}),!1),g.addEventListener("click",(()=>{t.pendingMsj("Getting weather details..."),a.getGeoLocation()}))})();